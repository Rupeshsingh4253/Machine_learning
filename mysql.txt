**Q1. What is a database? Differentiate between SQL and NoSQL databases.**

A1: A database is a structured collection of data that is organized and stored for easy access and management. It allows data to be easily retrieved, updated, and managed. Databases can be broadly categorized into SQL (Structured Query Language) and NoSQL databases.

- **SQL databases:**
  - Follow a structured, tabular format (tables).
  - Use a predefined schema to define the structure of the data.
  - Examples include MySQL, PostgreSQL, and SQLite.

- **NoSQL databases:**
  - Can store and process unstructured or semi-structured data.
  - Do not necessarily require a fixed schema.
  - Examples include MongoDB (document-oriented), Cassandra (wide-column store), and Redis (key-value store).

**Q2. What is DDL? Explain why CREATE, DROP, ALTER, and TRUNCATE are used with an example.**

A2: DDL stands for Data Definition Language. It deals with the structure (schema) of the database. Key DDL commands include:

- **CREATE:** Used to create a new database, table, view, index, etc.
  ```sql
  CREATE TABLE Employees (
      ID INT PRIMARY KEY,
      Name VARCHAR(255),
      Salary INT
  );
  ```

- **DROP:** Used to delete an existing database, table, view, index, etc.
  ```sql
  DROP TABLE Employees;
  ```

- **ALTER:** Used to modify the structure of an existing database object.
  ```sql
  ALTER TABLE Employees
  ADD COLUMN Department VARCHAR(50);
  ```

- **TRUNCATE:** Used to remove all records from a table but retains the structure.
  ```sql
  TRUNCATE TABLE Employees;
  ```

**Q3. What is DML? Explain INSERT, UPDATE, and DELETE with an example.**

A3: DML stands for Data Manipulation Language. It deals with the manipulation of data stored in the database.

- **INSERT:** Used to insert new records into a table.
  ```sql
  INSERT INTO Employees (ID, Name, Salary)
  VALUES (1, 'John Doe', 50000);
  ```

- **UPDATE:** Used to modify existing records in a table.
  ```sql
  UPDATE Employees
  SET Salary = 55000
  WHERE ID = 1;
  ```

- **DELETE:** Used to delete records from a table.
  ```sql
  DELETE FROM Employees
  WHERE ID = 1;
  ```

**Q4. What is DQL? Explain SELECT with an example.**

A4: DQL stands for Data Query Language. It is used to query the database for information.

- **SELECT:** Used to retrieve data from one or more tables.
  ```sql
  SELECT ID, Name, Salary
  FROM Employees
  WHERE Salary > 50000;
  ```

**Q5. Explain Primary Key and Foreign Key.**

A5: 
- **Primary Key:** A primary key is a unique identifier for a record in a table. It must contain unique values and cannot have NULL values. It is used to uniquely identify records in a table.
  ```sql
  CREATE TABLE Students (
      StudentID INT PRIMARY KEY,
      Name VARCHAR(255),
      Age INT
  );
  ```

- **Foreign Key:** A foreign key is a field in a table that refers to the primary key in another table. It establishes a link between the two tables.
  ```sql
  CREATE TABLE Courses (
      CourseID INT PRIMARY KEY,
      CourseName VARCHAR(255),
      InstructorID INT,
      FOREIGN KEY (InstructorID) REFERENCES Instructors(InstructorID)
  );
  ```

**Q6. Write a python code to connect MySQL to python. Explain the cursor() and execute() method.**

A6:
```python
import mysql.connector

# Establish a connection to the MySQL database
connection = mysql.connector.connect(
    host="your_host",
    user="your_user",
    password="your_password",
    database="your_database"
)

# Create a cursor object to interact with the database
cursor = connection.cursor()

# Example: Execute a SQL query using execute()
cursor.execute("SELECT * FROM Employees")

# Fetch all the rows from the executed query
result = cursor.fetchall()

# Print the result
for row in result:
    print(row)

# Close the cursor and connection when done
cursor.close()
connection.close()
```

- **cursor():** The `cursor()` method creates a cursor object, which is used to execute SQL queries and fetch results.

- **execute():** The `execute()` method is used to execute a SQL query. In the example, it executes a SELECT query to retrieve all rows from the "Employees" table.

**Q7. Give the order of execution of SQL clauses in an SQL query.**

A7: The order of execution for a SQL query is generally as follows:

1. **FROM:** Specifies the tables from which data will be queried.
2. **WHERE:** Filters the rows based on specified conditions.
3. **GROUP BY:** Groups the result set by one or more columns.
4. **HAVING:** Filters the groups based on specified conditions.
5. **SELECT:** Specifies the columns to be retrieved in the result set.
6. **ORDER BY:** Sorts the result set based on specified columns and order.
7. **LIMIT/OFFSET:** Limits the number of rows returned or skips a specified number of rows (used for pagination).

It's important to note that not all clauses are required in a query, and their usage depends on the specific requirements of the query.