**Q1. What is Flask Framework? What are the advantages of Flask Framework?**

**Flask Framework:**
Flask is a lightweight web application framework for Python. It is designed to be simple and easy to use, providing developers with the tools to build web applications quickly. Flask is known for its flexibility and follows the WSGI (Web Server Gateway Interface) standard.

**Advantages of Flask Framework:**
1. **Lightweight:** Flask is minimalistic and does not impose any dependencies or project structures.
2. **Flexibility:** Developers have the freedom to choose libraries and tools to integrate with Flask.
3. **Easy to Learn:** Flask has a simple and intuitive API, making it easy for beginners to pick up.
4. **Extensible:** Allows the use of extensions to add functionality as needed.
5. **Built-in Development Server:** Comes with a built-in development server for testing during development.
6. **Widely Adopted:** Flask has a large and active community, leading to extensive documentation and support.
7. **RESTful:** Easily supports the development of RESTful APIs.

**Q2. Create a simple Flask application to display ‘Hello World!!’. Attach the screenshot of the output in Jupyter Notebook.**

```python
from flask import Flask

app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello World!!'

if __name__ == '__main__':
    app.run(debug=True)
```

I can't directly display screenshots, but you can run this code in a Python environment (like a Jupyter Notebook) to see the output.

**Q3. What is App routing in Flask? Why do we use app routes?**

**App Routing in Flask:**
App routing in Flask refers to the process of defining URL patterns (routes) for your application. Each route corresponds to a specific function that should be executed when a user visits that particular URL.

**Why Use App Routes:**
- **URL Mapping:** App routes define how URLs are mapped to functions in your application.
- **Code Organization:** Routes help organize your code by associating specific functionalities with specific URLs.
- **User Interaction:** Routes handle user requests and determine what content or response to display.
- **RESTful Design:** For building RESTful APIs, routes play a crucial role in defining endpoints for different operations.

**Q4. Create a “/welcome” route to display the welcome message “Welcome to ABC Corporation” and a “/” route to show the following details: Company Name: ABC Corporation, Location: India, Contact Detail: 999-999-9999. Attach the screenshot of the output in Jupyter Notebook.**

```python
from flask import Flask

app = Flask(__name__)

@app.route('/')
def company_details():
    return '''
    Company Name: ABC Corporation
    Location: India
    Contact Detail: 999-999-9999
    '''

@app.route('/welcome')
def welcome():
    return 'Welcome to ABC Corporation'

if __name__ == '__main__':
    app.run(debug=True)
```

You can run this code in a Python environment to see the output.

**Q5. What function is used in Flask for URL Building? Write a Python code to demonstrate the working of the url_for() function.**

The `url_for()` function in Flask is used for URL building. It generates a URL for the specified endpoint.

```python
from flask import Flask, url_for

app = Flask(__name__)

@app.route('/')
def home():
    return 'Home Page'

@app.route('/about')
def about():
    return 'About Page'

if __name__ == '__main__':
    with app.test_request_context():
        print(url_for('home'))    # Output: /
        print(url_for('about'))   # Output: /about
```

In this example, `url_for('home')` and `url_for('about')` generate the URLs for the 'home' and 'about' endpoints, respectively. The URLs are printed to the console.
